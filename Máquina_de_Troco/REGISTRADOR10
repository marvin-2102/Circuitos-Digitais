library ieee;
use ieee.std_logic_1164.all;


ENTITY REG10BITS IS
        PORT(
                Y: IN STD_LOGIC_VECTOR(9 DOWNTO 0);
                CLEAR, LOAD, CLOCK: IN STD_LOGIC;
                S: OUT STD_LOGIC_VECTOR(9 DOWNTO 0)
             );

END REG10BITS;


ARCHITECTURE LOG OF REG10BITS  IS

COMPONENT MUX2X1 IS

    PORT(
        I0, I1, S0: IN STD_LOGIC;
        D: OUT STD_LOGIC
         );
END COMPONENT;

COMPONENT ffd IS

    PORT (ck, clr, set, d : in  std_logic;
         q : out std_logic
            );


END COMPONENT;

SIGNAL X, K: STD_LOGIC_VECTOR(9 DOWNTO 0);

BEGIN

M0: MUX2X1 PORT MAP(X(0), Y(0), LOAD, K(0));
M01: ffd PORT MAP(CLOCK,CLEAR, '1', K(0), X(0));


M1: MUX2X1 PORT MAP(X(1), Y(1), LOAD, K(1));
M11: ffd PORT MAP(CLOCK,CLEAR, '1', K(1), X(1));


M2: MUX2X1 PORT MAP(X(2), Y(2), LOAD, K(2));
M21: ffd PORT MAP(CLOCK,CLEAR, '1', K(2), X(2));


M3: MUX2X1 PORT MAP(X(3), Y(3), LOAD, K(3));
M31: ffd PORT MAP(CLOCK,CLEAR, '1', K(3), X(3));

M4: MUX2X1 PORT MAP(X(4), Y(4), LOAD, K(4));
M41: ffd PORT MAP(CLOCK,CLEAR, '1', K(4), X(4));

M5: MUX2X1 PORT MAP(X(5), Y(5), LOAD, K(5));
M51: ffd PORT MAP(CLOCK,CLEAR, '1', K(5), X(5));

M6: MUX2X1 PORT MAP(X(6), Y(6), LOAD, K(6));
M61: ffd PORT MAP(CLOCK,CLEAR, '1', K(6), X(6));

M7: MUX2X1 PORT MAP(X(7), Y(7), LOAD, K(7));
M71: ffd PORT MAP(CLOCK,CLEAR, '1', K(7), X(7));

M8: MUX2X1 PORT MAP(X(8), Y(8), LOAD, K(8));
M81: ffd PORT MAP(CLOCK,CLEAR, '1', K(8), X(8));

M9: MUX2X1 PORT MAP(X(9), Y(9), LOAD, K(9));
M91: ffd PORT MAP(CLOCK,CLEAR, '1', K(9), X(9));



S(0) <= X(0);
S(1) <= X(1);
S(2) <= X(2);
S(3) <= X(3);
S(4) <= X(4);
S(5) <= X(5);
S(6) <= X(6);
S(7) <= X(7);
S(8) <= X(8);
S(9) <= X(9);


END LOG;